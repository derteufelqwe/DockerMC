name: DockerMC CI Pipeline

#  - name: "Debug"
#    uses: lhotari/action-upterm@v1

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:


jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      # Setup and compile the artifact
      - name: "Clone Code"
        uses: actions/checkout@v2
      - name: "Setup JDK 8"
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: "Get project version"
        run: |
          version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version" >> $GITHUB_ENV

      # Compile and install essentials
      - name: "Install ServerManager"
        run: "mvn install -N --quiet"
      - name: "Install Commons"
        run: "mvn install -f Commons/pom.xml --quiet"

#      # Compile and push docker log driver plugin
#      - name: "Compile Log Driver"
#        run: "mvn package -f DockerLogDriver/pom.xml --quiet"
#      - name: "Setup docker Buildx"
#        uses: docker/setup-buildx-action@v1
#      - name: "Login to DockerHub"
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: "Build driver image"
#        run: "cd DockerLogDriver && sh buildImage.sh"
#      - name: "Push the image"
#        run: |
#          docker plugin push derteufelqwe/dockermc-log-driver:$VERSION
#          docker plugin push derteufelqwe/dockermc-log-driver:latest

      # Build and publish Minecraft plugin
      - name: "Package Minecraft plugin"
        run: "mvn package -f MinecraftPlugin/pom.xml --quiet"

      # Create the release
      - name: "Create release"
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: MinecraftPlugin/target/MinecraftPlugin-$VERSION.jar