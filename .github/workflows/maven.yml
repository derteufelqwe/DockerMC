name: DockerMC CI Pipeline

#  - name: "Debug"
#    uses: lhotari/action-upterm@v1

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:


jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      # Setup and compile the artifact
      - name: "Clone Code"
        uses: actions/checkout@v2
      - name: "Setup JDK 8"
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: "Get project version"
        run: |
          version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "VERSION=$version" >> $GITHUB_ENV
          mkdir sharedData
          echo "$version" >> sharedData/version.txt
      - name: "Install ServerManager"
        run: "mvn install -N --quiet"
      - name: "Install Commons"
        run: "mvn install -f Commons/pom.xml --quiet"

      - uses: actions/upload-artifact@v2
        with:
          name: shared-data
          path: |
            ~/.m2/repository
            sharedData


  docker-plugin:
    needs: setup
    runs-on: ubuntu-20.04
    steps:
      # Setup
      - name: "Clone Code"
        uses: actions/checkout@v2
      - name: "Setup JDK 8"
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/download-artifact@v2
        with:
          name: shared-data
          path: ~/.m2/repository
      - name: "Debug"
        uses: lhotari/action-upterm@v1
      - name: "Load version"
        run: |
          version=$(cat ~/sharedData/version.txt)
          echo "VERSION=$version" >> $GITHUB_ENV

      # Setup and push to docker
      - name: "Compile Log Driver"
        run: "mvn package -f DockerLogDriver/pom.xml --quiet"
      - name: "Setup docker Buildx"
        uses: docker/setup-buildx-action@v1
      - name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build driver image"
        run: "cd DockerLogDriver && sh buildImage.sh"
      - name: "Push the image"
        run: |
          docker plugin push derteufelqwe/dockermc-log-driver:$VERSION
          docker plugin push derteufelqwe/dockermc-log-driver:latest
